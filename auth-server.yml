# We need to setup different context root for the auth server so that we can store separate
# cookies for both the API gateway as well as the OAuth2 authorization server.
server:
  port: 8899
  contextPath: /userauth 

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security:
  user:
    password: password      

# Datasource and JPA configuration to be used for storing the OAuth authorization details 
# and token store
# url: jdbc:mysql://192.168.99.100:3306/auth
# username: root
# password: password
spring:
  datasource:
    url: jdbc:mysql://172.30.250.255:3306/auth
    username: root
    password: taihe@123!
    driver-class: com.mysql.jdbc.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create

---

spring:
  profiles: docker
eureka:
# Register our microservices to Eureka using hostnames in a Docker environment will not work, they will all get 
# one and the same hostname. Instead we configure them to use its IP address during registration with Eureka.
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://192.168.59.103:8761/eureka/
